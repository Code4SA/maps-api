// Libraries
function check_map(e,t){var n=!1;for(var r=0;r<t.length;r++)e==t[r]&&(n=!0);return n?!0:new restify.InvalidArgumentError("Invalid demarcation. Valid demarcations are: "+t.join(", "))}function flatten_object(e){var t=[];for(obj in e)typeof e[obj]!="function"&&e[obj]!==!1&&(typeof e[obj]=="object"?t=t.concat(flatten_object(e[obj])):t.push(e[obj]));return t}function safe_array(e){for(var t=0;t<e.length;t++)e[t]=encodeURIComponent(e[t]);return e}function merge_objects(e,t){for(key in t)e[key]=t[key]}function find_file(e,t){if(e<1999)return!1;var n="data/"+e+"/"+t,r=n+".geojson";console.log("Checking for "+n);if(fs.existsSync(r))return e;var i=e-1;return find_file(i,t)}function makeMap(e,t,n,r){geojson=JSON.parse(e);demarcation=t.demarcation;for(var i=0;i<geojson.features.length;i++){var s=geojson.features[i].properties,o={};for(property in s)normalized_fields[demarcation]&&normalized_fields[demarcation][property]&&(o[normalized_fields[demarcation][property]]=s[property]);geojson.features[i].properties=o}if(t.filter){var u=[];for(var i=0;i<geojson.features.length;i++)for(field in t.filter)if(field in geojson.features[i].properties)if(t.filter[field]instanceof Array)for(var a=0;a<t.filter[field].length;a++)t.filter[field][a]==geojson.features[i].properties[field]&&u.push(geojson.features[i]);else t.filter[field]==geojson.features[i].properties[field]&&u.push(geojson.features[i]);geojson.features=u}if(t.format=="geojson"){merge_objects(r,geojson);res.json(r);return!0}var f=topojson.topology({demarcation:geojson},t);fs.writeFile(n,JSON.stringify(f),function(e){e&&console.log("Error saving cache file "+fname,e);console.log("Cached "+fname)});merge_objects(r,f)}function generate_map(e,t,n,r){var i=flatten_object(r);i=safe_array(i);var s=find_file(e,t),o="data/"+s+"/"+t;if(!o)return new restify.InvalidArgumentError("Unable to find this demarcation for this or preceding years.");var u={source:"Code4SA",year:s,params:r},a=o+"-"+i.join("-")+".json";fs.readFile(a,function(e,t){if(!e){console.log("Hit cache "+a);merge_objects(u,JSON.parse(t));n.json(u);return!0}console.log("Cache miss, generating from "+o+".geojson");fs.readFile(o+".geojson","utf8",function(e,t){console.log(e);console.log("Read file");u=makeMap(t,r);n.json(u);return!0});return!0})}function defaultParams(e){params={format:e.params.format||"topojson","coordinate-system":e.params.coordinate_system||"cartesian",quantization:e.params.quantization||1e3,id:function(e){return e.properties[demarcation]},filter:e.params.filter||!1,verbose:e.params.debug||!1,"property-transform":function(e,t,n){e[t]=n;return!0}};for(var t in e.params)params[t]=e.params[t];return params}function political(e,t,n){var r=e.params.demarcation,i=e.params.year||"2014",s=check_map(r,political_maps);if(s!==!0)return n(s);console.log("Got demarcation request /political/"+i+"/"+r);var o=defaultParams(e),s=generate_map(i,r,t,o);if(s!==!0)return n(s);n()}function findGeofile(e){var t=fs.readdirSync(e);for(var n=0;n<t.length;n++)if(t[n].indexOf("geojson")>0)return e+"/"+t[n];return!1}function showMap(e,t,n){var r=e.params.mapname,i=defaultParams(e),s={source:"Code4SA",params:i},o=safe_array(flatten_object(i)),u="./cache/"+o.join("-")+".json";fs.readFile(u,function(e,n){if(!e){console.log("Cache hit, "+u);merge_objects(s,JSON.parse(n));t.json(s);return!0}console.log("Cache miss, "+u);db.collection("maps").find({name:r}).toArray(function(e,n){fname="./maps"+n[0].filename;if(!fname)return new restify.InvalidArgumentError("Unable to find the files for this map.");fs.readFile(fname,"utf8",function(e,n){console.log("Read file");makeMap(n,i,u,s);t.json(s);return!0})})})}function showMapOptions(e,t,n){var r=[],i=db.collection("maps").find({}).toArray(function(e,r){t.json(r);n()})}function readme(e,t,n){fs.readFile("API.md","utf8",function(e,n){t.contentType="text/plain";t.send(n)});n()}function fix_cors_header(e,t,n){t.setHeader("Cache-Control","no-transform,public,max-age=86400,s-maxage=86400");n()}function mongoConnect(e,t,n){MongoClient.connect("mongodb://127.0.0.1:27017/"+config.mongodb,function(e,t){if(e)throw e;db=t;checkDbExists();n()})}function checkDbExists(){var e=db.collection("maps").find({}).toArray(function(e,t){if(e)throw e;if(!t.length){console.log("Could not find maps database");var n=require("./default");db.collection("maps").insert(n.maps,function(e,t){if(e)throw e;console.log("Created maps database")})}})}function createDB(){MongoClient.connect("mongodb://127.0.0.1:27017/"+config.mongodb,function(e,t){if(e)throw e;var n=require("./default");t.collection("maps").drop();t.collection("maps").insert(n.maps,function(e,t){if(e)throw e;console.log("Created maps database")})})}var config=require("./config"),restify=require("restify"),topojson=require("topojson"),fs=require("fs"),markdown=require("markdown").markdown,MongoClient=require("mongodb").MongoClient,political_maps=["ward","municipality","province","voting_district"],normalized_fields={ward:{PROVINCE:"province",CAT_B:"municipality",MUNICNAME:"municipality_name",WARDNO:"ward_number",WARD_NO:"ward_number",WARD_ID:"ward",WARDID:"ward",WARD_POP:"population",COUNCILLOR:"counillor",Area:"area"},municipality:{PROVINCE:"province",CAT_B:"municipality",CATEGORY:"category",TYPE:"category",CAT2:"category_name",MUNICNAME:"municipality_name",COMMON_NAM:"municipality_name",DISTRICT:"district",AREA:"area"},province:{CODE:"province",PROVINCE:"province_name",code:"province",province:"province_name",Area:"area",hectares:"hectares"},voting_district:{PROVINCE:"province_name",FKLWARDID:"ward",MUNICIPALI:"municipality_name",VDNumber:"voting_district",SPROVINCE:"province_name",PKLVDNUMBE:"voting_district",SMUNICIPAL:"municipality_name",FKLMUNICID:"municipality_id"}},transform_fields={ward:{province:function(e){return e=="NP"?"LIM":e=="GP"?"GT":e}}},db=null,server=restify.createServer({name:config.serverName});createDB();server.use(restify.fullResponse());server.use(restify.queryParser());server.use(fix_cors_header);server.use(mongoConnect);server.get("/political/:demarcation",political);server.get("/political/:year/:demarcation",political);server.get("/map/:mapname",showMap);server.get("/map",showMapOptions);server.get("/",readme);server.listen(config.port,function(){console.log("Listening on port "+config.port)});